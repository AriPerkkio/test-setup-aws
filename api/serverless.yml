service: service-one

provider:
  name: aws
  runtime: nodejs8.10
  stackName: test-stack
  apiName: test-api
  versionFunctions: false
  endpointType: regional

functions:
  functionOne:
    handler: functions/handlers.one
    events:
      - http:
          path: api/endpoint-one
          method: get
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: Authorizer
  functionTwo:
    handler: functions/handlers.two
    events:
      - http:
          path: api/endpoint-two
          method: get
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: Authorizer

resources:
  Resources:
    # Reference https://gist.github.com/TimCoates/13b1ae454154425f7afc421707db2f86#file-serverless-yml-L43
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: "true"
          DefaultRootObject: "index.html"
          DefaultCacheBehavior:
            AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            TargetOriginId: myS3Origin
            ForwardedValues:
              QueryString: "false"
            ViewerProtocolPolicy: allow-all
            MinTTL: "0"
            MaxTTL: "6"
            DefaultTTL: "3"
          CacheBehaviors:
          - AllowedMethods:
            - GET
            - HEAD
            MinTTL: "0"
            MaxTTL: "0"
            DefaultTTL: "0"
            TargetOriginId: myAPIOrigin
            ForwardedValues:
              QueryString: 'true'
              Cookies:
                Forward: all
            ViewerProtocolPolicy: allow-all
            PathPattern: api/*
          Origins:
            - DomainName:
               Fn::Join:
                - ""
                - - Ref: ApiGatewayRestApi
                  - ".execute-api.us-east-1.amazonaws.com"
              Id: myAPIOrigin
              OriginPath: /dev
              CustomOriginConfig:
                OriginProtocolPolicy: https-only
            - DomainName: aperkkio.test.s3.amazonaws.com
              Id: myS3Origin
              S3OriginConfig:
                OriginAccessIdentity: ''
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 7
            RequireLowercase: true
            RequireNumbers: true
            RequireUppercase: true
        Schema:
          - AttributeDataType: String
            Mutable: false
            Name: email
            Required: true
        UserPoolName: test-user-pool
    Authorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        IdentitySource: method.request.header.Authorization
        Name: test-authorizer
        RestApiId:
          Ref: ApiGatewayRestApi
        Type: COGNITO_USER_POOLS
        ProviderARNs:
          - Fn::GetAtt: [UserPool, Arn]
